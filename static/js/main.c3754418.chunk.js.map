{"version":3,"sources":["components/FileUpload.tsx","services/importImages.ts","assets/images/dish/Acinetobacter.baumanii_0008.jpg","assets/images/dish/Bifidobacterium.spp_0005.jpg","assets/images/dish/Bifidobacterium.spp_0007.jpg","assets/images/dish/Candida.albicans_0011.jpg","assets/images/dish/Escherichia.coli_0020.jpg","assets/images/dish/Fusobacterium_0010.jpg","assets/images/dish/Lactobacillus.rhamnosus_0006.jpg","assets/images/dish/Lactobacillus.rhamnosus_0019.jpg","assets/images/dish/Micrococcus.spp_0011.jpg","assets/images/dish/Micrococcus.spp_0017.jpg","assets/images/dish/Neisseria.gonorrhoeae_0010.jpg","assets/images/dish/Proteus_0007.jpg","assets/images/dish/Proteus_0010.jpg","assets/images/dish/Staphylococcus.saprophiticus_0007.jpg","assets/images/dish/Staphylococcus.saprophiticus_0009.jpg","components/ImageListItem.tsx","components/ImageList.tsx","assets/images/lab.png","components/InitialView.tsx","components/ImageAnalysis.tsx","components/ResultsList.tsx","containers/pages/HomePage.tsx","assets/images/v5.png","containers/pages/AboutPage.tsx","assets/images/petri-dish-4.png","components/layout/SideBar.tsx","containers/MainContainer.tsx","reportWebVitals.js","index.js"],"names":["FileUpload","onFileAdded","useDropzone","onDrop","acceptedFiles","accept","multiple","getRootProps","getInputProps","isDragActive","className","ImageListItem","src","name","onClick","title","alt","ImageList","data","onFileSelected","length","map","fileData","index","URL","createObjectURL","d","preloadedImages","split","pop","InitialView","img","ImageAnalysis","isLoading","predictionStatus","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","prediction","replace","score","Math","round","predictionDateTime","fileSize","ResultsList","scope","image","HomePage","useState","images","setImages","selectedImage","setSelectedImage","analysisLoading","setAnalysisLoading","results","setResults","updateSelectedImage","newSelectedImage","Date","toLocaleString","newResults","concat","appendToResults","updateSelectedImageStatus","status","useEffect","fetch","then","res","blob","file","File","formData","FormData","append","axios","put","process","console","log","catch","error","finally","undefined","addImage","CLASSES","target","href","style","columns","item","accuracyImg","SideBar","to","logo","MainContainer","path","AboutPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3754418.chunk.js","sourcesContent":["import React, {FunctionComponent} from 'react'\nimport {useDropzone} from 'react-dropzone'\nimport { DocumentDownloadIcon } from '@heroicons/react/outline'\n\n\ntype ComponentProps = {\n  onFileAdded: (fileData: any) => void,\n}\n\n\nconst FileUpload: FunctionComponent<ComponentProps> = ({onFileAdded}) => {\n  const onDrop = (acceptedFiles: any[]) => {\n    onFileAdded(acceptedFiles[0])\n  }\n\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({\n    onDrop,\n    accept: 'image/jpeg, image/png',\n    multiple: false\n  })\n\n  return (\n    <div className=\"w-full\">\n      <div\n        {...getRootProps()}\n        className=\"p-6 border-2 border-dashed rounded-2xl w-full bg-blueGray-100 cursor-pointer\"\n      >\n        <input {...getInputProps()} />\n\n        <div className=\"text-center space-y-6\">\n          <DocumentDownloadIcon className=\"inline-block h-12 w-12 text-blueGray-300\"/>\n          <p className=\"text-blueGray-500\">\n            {\n              isDragActive ? (\n                <span>Drop the file here ...</span>\n              ) : (\n                <span>Drag & drop an image here,<br/>or click to select a file</span>\n              )\n            }\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nexport default FileUpload\n","import img1 from 'assets/images/dish/Acinetobacter.baumanii_0008.jpg'\nimport img2 from 'assets/images/dish/Bifidobacterium.spp_0005.jpg'\nimport img3 from 'assets/images/dish/Bifidobacterium.spp_0007.jpg'\nimport img4 from 'assets/images/dish/Candida.albicans_0011.jpg'\nimport img5 from 'assets/images/dish/Escherichia.coli_0020.jpg'\nimport img6 from 'assets/images/dish/Fusobacterium_0010.jpg'\nimport img7 from 'assets/images/dish/Lactobacillus.rhamnosus_0006.jpg'\nimport img8 from 'assets/images/dish/Lactobacillus.rhamnosus_0019.jpg'\nimport img9 from 'assets/images/dish/Micrococcus.spp_0011.jpg'\nimport img10 from 'assets/images/dish/Micrococcus.spp_0017.jpg'\nimport img11 from 'assets/images/dish/Neisseria.gonorrhoeae_0010.jpg'\nimport img12 from 'assets/images/dish/Proteus_0007.jpg'\nimport img13 from 'assets/images/dish/Proteus_0010.jpg'\nimport img14 from 'assets/images/dish/Staphylococcus.saprophiticus_0007.jpg'\nimport img15 from 'assets/images/dish/Staphylococcus.saprophiticus_0009.jpg'\n\n\nexport default [\n  img1,\n  img2,\n  img3,\n  img4,\n  img5,\n  img6,\n  img7,\n  img8,\n  img9,\n  img10,\n  img11,\n  img12,\n  img13,\n  img14,\n  img15,\n]\n","export default __webpack_public_path__ + \"static/media/Acinetobacter.baumanii_0008.c8fd795c.jpg\";","export default __webpack_public_path__ + \"static/media/Bifidobacterium.spp_0005.291912a1.jpg\";","export default __webpack_public_path__ + \"static/media/Bifidobacterium.spp_0007.2163e5a1.jpg\";","export default __webpack_public_path__ + \"static/media/Candida.albicans_0011.e601fb8c.jpg\";","export default __webpack_public_path__ + \"static/media/Escherichia.coli_0020.42cbd8b6.jpg\";","export default __webpack_public_path__ + \"static/media/Fusobacterium_0010.c4fbaacf.jpg\";","export default __webpack_public_path__ + \"static/media/Lactobacillus.rhamnosus_0006.3d929abd.jpg\";","export default __webpack_public_path__ + \"static/media/Lactobacillus.rhamnosus_0019.ddb75d35.jpg\";","export default __webpack_public_path__ + \"static/media/Micrococcus.spp_0011.d38832e4.jpg\";","export default __webpack_public_path__ + \"static/media/Micrococcus.spp_0017.9ed6bed3.jpg\";","export default __webpack_public_path__ + \"static/media/Neisseria.gonorrhoeae_0010.52a9216c.jpg\";","export default __webpack_public_path__ + \"static/media/Proteus_0007.d2c6b018.jpg\";","export default __webpack_public_path__ + \"static/media/Proteus_0010.2cbd3547.jpg\";","export default __webpack_public_path__ + \"static/media/Staphylococcus.saprophiticus_0007.58a18e19.jpg\";","export default __webpack_public_path__ + \"static/media/Staphylococcus.saprophiticus_0009.374bdcdf.jpg\";","import React, {FunctionComponent} from 'react'\n\n\ntype ComponentProps = {\n  src: any | null,\n  name: string,\n  onClick: (fileData: any, name: string) => void,\n  title?: string,\n}\n\n\nconst ImageListItem: FunctionComponent<ComponentProps> = ({src, name, onClick, title}) => {\n  return (\n    <div\n      className=\"p-2 bg-white rounded-md shadow-sm border-2 border-transparent cursor-pointer\n      hover:shadow-xl hover:border-blueGray-600\"\n      onClick={() => {onClick(src, name)}}\n      title={title ? title : name}\n    >\n      <img\n        className=\"object-cover w-36\"\n        src={src}\n        alt={name}\n      />\n      <p className=\"text-sm mt-1 truncate\">{name}</p>\n    </div>\n  )\n}\n\n\nexport default ImageListItem\n","import React, {FunctionComponent} from 'react'\nimport preloadedImages from 'services/importImages';\nimport ImageListItem from \"./ImageListItem\";\n\n\ntype ComponentProps = {\n  data: any[],\n  onFileSelected: (fileData: any, name: string) => void\n}\n\nconst ImageList: FunctionComponent<ComponentProps> = ({data, onFileSelected}) => {\n  return (\n    <div>\n      {\n        (data && data.length > 0) && (\n          <div className=\"mt-6\">\n            <h6 className=\"text-blueGray-500\">Your uploads</h6>\n            <div className=\"mt-4 grid grid-cols-4 gap-4\">\n              {\n                data.map((fileData, index) => {\n                  return (\n                    <ImageListItem\n                      key={index}\n                      src={URL.createObjectURL(fileData)}\n                      name={fileData.name}\n                      onClick={(d, name) => onFileSelected(d, name)}\n                    />\n                  )\n                })\n              }\n            </div>\n          </div>\n        )\n      }\n\n      <div className=\"mt-6\">\n        <h6 className=\"text-blueGray-500\">Pre-loaded</h6>\n        <div className=\"mt-4 grid grid-cols-4 gap-4\">\n          {\n            preloadedImages.map((src, index) => {\n              return (\n                <ImageListItem\n                  key={`preloaded-${index}`}\n                  src={src}\n                  name={`Image_${index + 1}.jpg`}\n                  title={src.split(\"/\").pop()}\n                  onClick={(d, name) => onFileSelected(d, name)}\n                />\n              )\n            })\n          }\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nexport default ImageList\n","export default __webpack_public_path__ + \"static/media/lab.6f1bc5ff.png\";","import React, {FunctionComponent} from 'react'\nimport img from 'assets/images/lab.png'\n\n\n\nconst InitialView: FunctionComponent = () => {\n  return (\n    <div className=\"flex flex-col items-center mt-24\">\n      <div>\n        <img src={img} alt=\"\" className=\"block w-24\" />\n      </div>\n      <div className=\"mt-12\">\n        <h3 className=\"text-blueGray-600\">Select image to analyze</h3>\n      </div>\n      <div className=\"mt-4\">\n        <p className=\"text-center text-blueGray-400\">Upload your files or choose from the<br/>pre-loaded images</p>\n      </div>\n    </div>\n  )\n}\n\n\nexport default InitialView\n","import React, {FunctionComponent} from 'react'\nimport {SelectedImage} from \"containers/pages/HomePage\"\nimport {CheckCircleIcon} from '@heroicons/react/outline'\nimport InitialView from \"components/InitialView\"\n\n\ntype ComponentProps = {\n  data: SelectedImage | null,\n  isLoading?: boolean\n}\n\n\nconst ImageAnalysis: FunctionComponent<ComponentProps> = ({data, isLoading= false}) => {\n  return (\n    <div>\n      {\n        (data) ? (\n          <div className=\"flex\">\n            <div className=\"flex-1\">\n              <img src={data.fileData} alt=\"image to predict\" className=\"rounded-lg\"/>\n            </div>\n            <div className=\"flex-1 pl-6\">\n              <div className=\"font-bold text-blueGray-700 flex items-center h-10\">\n                <div>\n                  {data.predictionStatus === 'finished' && <CheckCircleIcon className=\"w-8 h-8 text-emerald-500\" />}\n                  {data.predictionStatus === 'pending' && <div>\n                    <svg className=\"animate-spin -ml-1 mr-3 h-6 w-6 text-blue-200\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"/>\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"/>\n                    </svg>\n                  </div>}\n                </div>\n                <div className=\"pl-2\">\n                  {data.name}\n                </div>\n              </div>\n\n              {\n                isLoading ? (\n                  <div className=\"text-blueGray-600 mt-6\">\n                    Crunching the numbers...\n                  </div>\n                ) : (\n                  <div className=\"text-blueGray-600 mt-6\">\n                    <p>Prediction: {data.prediction ? data.prediction.replace('.', ' ') : '-'}</p>\n                    <p>Confidence: {data.score ? Math.round(data.score) + '%' : '-'}</p>\n                    <p>Result received: {data.predictionDateTime}</p>\n                    <p>File Size: {data.fileSize ? Math.round(data.fileSize / 1000) : 0} KB</p>\n                  </div>\n                )\n              }\n            </div>\n          </div>\n\n        ) : (\n          <InitialView/>\n        )\n      }\n    </div>\n  )\n}\n\n\nexport default ImageAnalysis\n","import React, {FunctionComponent} from 'react'\nimport {SelectedImage} from \"containers/pages/HomePage\";\n\n\ntype ComponentProps = {\n  data: SelectedImage[]\n}\n\n\nconst ResultsList: FunctionComponent<ComponentProps> = ({data}) => {\n  return (\n    <div>\n      <div className=\"flex flex-col\">\n        <div className=\"-my-2 overflow-x-auto sm:-mx-6 lg:-mx-8 pb-12\">\n          <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n            <div className=\"shadow-xl overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n              <table className=\"min-w-full divide-y divide-gray-200\">\n                <thead className=\"bg-gray-50\">\n                <tr>\n                  <th scope=\"col\"\n                      className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Image\n                  </th>\n                  <th scope=\"col\"\n                      className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                    Prediction\n                  </th>\n                  {/*<th scope=\"col\"*/}\n                  {/*    className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">*/}\n                  {/*  Time*/}\n                  {/*</th>*/}\n                </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-100\">\n                {\n                  data.map((image, index) => {\n                    return (\n                      <tr key={index} className=\"hover:bg-lightBlue-50\">\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"flex items-center\">\n                            <div className=\"flex-shrink-0 h-10 w-10\">\n                              <img className=\"h-10 w-10 rounded-full\"\n                                   src={image.fileData}\n                                   alt=\"\"/>\n                            </div>\n                            <div className=\"ml-4\">\n                              <div className=\"text-sm font-medium text-gray-900\">\n                                {image.name}\n                              </div>\n                              <div className=\"text-xs text-gray-400\">\n                                {image.predictionDateTime}\n                              </div>\n                            </div>\n                          </div>\n                        </td>\n\n                        <td className=\"px-6 py-4 whitespace-nowrap\">\n                          <div className=\"text-sm text-gray-900 capitalize\">{image.prediction ? image.prediction.replace('.', ' ') : '-'}</div>\n                          <div className=\"text-xs text-gray-400\">Confidence: {image.score ? Math.round(image.score) + '%' : '-'}</div>\n                        </td>\n\n                        {/*<td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-500\">*/}\n                        {/*  {image.predictionDateTime}*/}\n                        {/*</td>*/}\n                      </tr>\n                    )\n                  })\n                }\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nexport default ResultsList\n","import React, {FunctionComponent, useState, useEffect} from 'react'\nimport FileUpload from \"components/FileUpload\"\nimport ImageList from \"components/ImageList\"\nimport ImageAnalysis from \"components/ImageAnalysis\"\nimport axios from \"axios\";\nimport {CameraIcon} from \"@heroicons/react/outline\";\nimport ResultsList from \"components/ResultsList\";\n\n\ntype ComponentProps = {\n  data: any | null\n}\n\n\nexport type SelectedImage = {\n  fileData: string | object | any,\n  name?: string,\n  predictionStatus: string,\n  prediction?: string,\n  score?: number,\n  predictionDateTime?: string,\n  fileSize?: number\n}\n\n\nconst HomePage: FunctionComponent<ComponentProps> = ({data}) => {\n  const [images, setImages] = useState<any[]>([])\n  const [selectedImage, setSelectedImage] = useState<SelectedImage | null>(null)\n  const [analysisLoading, setAnalysisLoading] = useState(false)\n  const [results, setResults] = useState<any[]>([])\n\n  const addImage = (fileData: any) => {\n    setImages([fileData].concat(images))\n\n    const newSelectedImage: SelectedImage = {\n      fileData: URL.createObjectURL(fileData),\n      name: fileData.name,\n      predictionStatus: 'pending',\n      prediction: '',\n      score: undefined,\n      predictionDateTime: undefined,\n      fileSize: undefined\n    }\n\n    setSelectedImage(newSelectedImage)\n  }\n\n  const appendToResults = (image: SelectedImage) => {\n    const newResults = [image].concat(results)\n    setResults(newResults)\n  }\n\n  const updateSelectedImage = (data: any) => {\n    if (selectedImage) {\n\n      const newSelectedImage = {\n        ...selectedImage,\n        prediction: data.prediction,\n        score: data.score,\n        predictionDateTime: new Date().toLocaleString(),\n        predictionStatus: 'finished',\n        fileSize: data.fileSize\n      }\n\n      setSelectedImage(newSelectedImage)\n      appendToResults(newSelectedImage)\n    }\n  }\n\n  const updateSelectedImageStatus = (status: string) => {\n    if (selectedImage) {\n\n      const newSelectedImage = {\n        ...selectedImage,\n        predictionStatus: status,\n      }\n\n      setSelectedImage(newSelectedImage)\n    }\n  }\n\n  const startAnalysis = (image: SelectedImage) => {\n    // Since we are using SRC attribute, we need to load image first\n    setAnalysisLoading(true)\n\n    fetch(image.fileData)\n      .then(res => res.blob())\n      .then(blob => {\n        // Create the FormData instance, it is expected by DRF endpoint\n        const file = new File([blob], image.name ? image.name : 'image.jpg');\n        const formData = new FormData();\n        formData.append(\"file\", file);\n\n        // Send the file\n        axios.put(\n          process.env.REACT_APP_API_URL + '/upload/' + image.name,\n          formData,\n          {})\n          .then(res => {\n            if (res.status === 200) {\n              // Everything went well, update the results for the SelectedImage\n              updateSelectedImage(res.data)\n            } else {\n              // The server did not return 200, either network or server issue\n              console.log('Possibly server error, or network issue', res.status, res)\n              setAnalysisLoading(false)\n              updateSelectedImageStatus('error')\n            }\n          })\n          .catch((error) => {\n            console.error('Error sending file', error)\n            updateSelectedImageStatus('error')\n          })\n          .finally(() => {\n            setAnalysisLoading(false)\n          })\n      })\n      .catch((error) => {\n        // Was not able to load the image\n        console.error('Error loading the image')\n        setAnalysisLoading(false)\n        updateSelectedImageStatus('error')\n      })\n  }\n\n  useEffect(() => {\n    if (selectedImage !== null && selectedImage.predictionStatus !== 'finished') {\n      startAnalysis(selectedImage)\n    }\n  }, [selectedImage])\n\n  return (\n    <div className=\"flex\">\n      <div className=\"w-1/2\">\n        <div className=\"p-6\">\n          <h1 className=\"text-blueGray-700 text-center\">Bacterial culture classifier</h1>\n\n          <div className=\"mt-12\">\n            <ImageAnalysis data={selectedImage} isLoading={analysisLoading}/>\n          </div>\n\n          {\n            results.length > 0 && (\n              <div className=\"mt-12\">\n                <ResultsList data={results} />\n              </div>\n            )\n          }\n        </div>\n      </div>\n\n      <aside className=\"w-1/2 h-screen sticky overflow-y-auto top-0 bg-blueGray-50\">\n        <div className=\"p-6 pt-1 relative\">\n          <div className=\"sticky top-0 bg-blueGray-50 -ml-6 pl-6 pt-4 pb-4 sticky:bg-black\">\n            <h4 className=\"text-blueGray-500\">\n            <span className=\"align-middle\">\n              <CameraIcon className=\"inline-block w-8 h-8 text-lightBlue-300\"/> Images\n            </span>\n            </h4>\n          </div>\n\n          <div className=\"mt-2\">\n            <FileUpload\n              onFileAdded={(fileData) => {\n                addImage(fileData)\n              }}\n            />\n          </div>\n\n          <div>\n            <ImageList\n              data={images}\n              onFileSelected={(fileData, name) => {\n                setSelectedImage({fileData, name, predictionStatus: 'pending'})\n              }}\n            />\n          </div>\n\n          {\n            analysisLoading && (\n              <div className=\"w-full bg-white bg-opacity-20 cursor-not-allowed absolute top-0 left-0 bottom-0 right-0\"/>\n            )\n          }\n        </div>\n      </aside>\n    </div>\n  )\n}\n\n\nexport default HomePage\n","export default __webpack_public_path__ + \"static/media/v5.70bcacfd.png\";","import React, {FunctionComponent} from 'react'\nimport accuracyImg from 'assets/images/v5.png'\nimport culturesImg from 'assets/images/cultures.png'\n\n\ntype ComponentProps = {\n  data: any | null\n}\n\n\nconst CLASSES = ['Acinetobacter.baumanii', 'Actinomyces.israeli', 'Bacteroides.fragilis', 'Bifidobacterium.spp',\n  'Candida.albicans', 'Clostridium.perfringens', 'Enterococcus.faecalis', 'Enterococcus.faecium',\n  'Escherichia.coli', 'Fusobacterium', 'Lactobacillus.casei', 'Lactobacillus.crispatus',\n  'Lactobacillus.delbrueckii', 'Lactobacillus.gasseri', 'Lactobacillus.jehnsenii',\n  'Lactobacillus.johnsonii', 'Lactobacillus.paracasei', 'Lactobacillus.plantarum',\n  'Lactobacillus.reuteri', 'Lactobacillus.rhamnosus', 'Lactobacillus.salivarius',\n  'Listeria.monocytogenes', 'Micrococcus.spp', 'Neisseria.gonorrhoeae', 'Porfyromonas.gingivalis',\n  'Propionibacterium.acnes', 'Proteus', 'Pseudomonas.aeruginosa', 'Staphylococcus.aureus',\n  'Staphylococcus.epidermidis', 'Staphylococcus.saprophiticus', 'Streptococcus.agalactiae',\n  'Veionella']\n\n\nconst HomePage: FunctionComponent<ComponentProps> = ({data}) => {\n  if (data === null) return <p>No data.</p>\n\n  return (\n    <div className=\"p-6 pb-12\">\n      <h1 className=\"text-blueGray-700\">About</h1>\n\n      <div className=\"flex mt-6 text-blueGray-700\">\n        <div className=\"w-1/2 space-y-2\">\n          <p>This application is an image classifier. The input is a photo of a bacterial culture taken from the Petri\n            dish. The idea comes from the paper <a target=\"_blank\" href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5599001/\">\n              Deep learning approach to bacterial colony classification</a>.\n          </p>\n\n          <p>The authors made their code available <a target=\"_blank\" href=\"https://github.com/bartoszzielinski/deep-fbanks\">here</a>,\n            though this application does not use it. The model was trained on the original dataset\n            (can be found <a target=\"_blank\" href=\"http://misztal.edu.pl/software/databases/dibas/\">here</a>)\n            using TensorFlow and its accuracy is approximately 82%.\n          </p>\n\n          <p>The classification is performed within the following list:</p>\n\n          <div className=\"pt-6 pb-6 text-blueGray-500\">\n            <ul className=\"list-inside\" style={{columns: 2}}>\n              {\n                CLASSES.map((item, index) => (\n                  <li key={index}>- {item}</li>\n                ))\n              }\n            </ul>\n          </div>\n\n          <p>TensorFlow is used in the backend to make the predictions.</p>\n\n          <p>\n            Interesting material on the topic: <br/>\n            - <a target=\"_blank\" href=\"https://ddd.uab.cat/pub/tesis/2018/hdl_10803_666842/emf1de1.pdf\">Image Analysis of Bacterial Colonies in Classic and Alternative Gel-Based Growth Media</a>.<br/>\n            - <a target=\"_blank\" href=\"http://www.microbia.org/index.php/resources\">MicrobIA Project</a>. Using masking in the model training. Links to the large datasets and code.\n          </p>\n        </div>\n\n        <div className=\"w-1/2 pl-6\">\n          <img src={accuracyImg} className=\"block w-96\" alt=\"\" />\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nexport default HomePage\n","export default __webpack_public_path__ + \"static/media/petri-dish-4.05990dae.png\";","import React, {FunctionComponent} from 'react'\nimport {\n  Link\n} from \"react-router-dom\"\nimport logo from 'assets/images/petri-dish-4.png';\nimport {HomeIcon, AcademicCapIcon, InformationCircleIcon} from '@heroicons/react/solid';\n\n\nconst SideBar: FunctionComponent = () => {\n  return (\n    <div className=\"h-screen bg-blueGray-800 text-white p-4\">\n      <div>\n        <Link to={'/'}>\n          <img src={logo} alt=\"\" className=\"block w-12\" />\n        </Link>\n      </div>\n\n      <div className=\"flex flex-col items-center mt-12 space-y-6\">\n        <div>\n          <Link to={'/'} className=\"block w-8 h-8 rounded-lg p-1 bg-gradient-to-r from-blue-600 to-indigo-700 shadow-lg\n          border border-blueGray-800 hover:border-white\">\n            <HomeIcon className=\"w-f h-f text-lightBlue-200\" />\n          </Link>\n        </div>\n\n        <div>\n          <Link to={'/about'} className=\"block w-8 h-8 rounded-lg p-1 bg-gradient-to-r from-orange-600 to-pink-800 shadow-lg\n          border border-blueGray-800 hover:border-white\">\n            <InformationCircleIcon className=\"w-f h-f text-red-200\" />\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n\n\nexport default SideBar\n","import React, {FunctionComponent} from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\"\nimport 'assets/style/main.css'\nimport HomePage from \"containers/pages/HomePage\"\nimport AboutPage from \"containers/pages/AboutPage\"\nimport SideBar from \"components/layout/SideBar\"\n\n\nconst MainContainer: FunctionComponent = () => {\n  return (\n    <div>\n      <Router>\n        <div className=\"flex\">\n          <aside className=\"h-screen sticky top-0\">\n            <SideBar/>\n          </aside>\n\n          <main className=\"flex-1\">\n            <Switch>\n              <Route path=\"/about\">\n                <AboutPage data={{}} />\n              </Route>\n              <Route path=\"/\">\n                <HomePage data={{}} />\n              </Route>\n            </Switch>\n          </main>\n        </div>\n      </Router>\n    </div>\n  )\n}\n\n\nexport default MainContainer\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MainContainer from \"containers/MainContainer\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <MainContainer />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}